{"version":3,"sources":["components/PokemonCardList/Style.module.css","components/CardPokemon/Style.module.css","components/MySelect/Style.module.css","components/LeftMenu/Style.module.css","components/Pagination/Style.module.css","components/Header/Style.module.css","pages/PokemonListPage/Style.module.css","components/AuthorizationVerification.js","pages/AuthPage.js","pages/AccessPasswordOTPPage.js","components/MySelect/MySelect.js","components/LeftMenu/LeftMenu.js","components/Pagination/Pagination.js","components/NothingWasFound/NothingWasFound.js","components/CardPokemon/CardPokemon.js","components/ModalPokemon/ModalPokemon.js","components/PokemonCardList/PokemonCardList.js","components/Header/Header.js","pages/PokemonListPage/PokemonListPage.js","pages/PokemonPage/PokemonPage.js","store/store.js","App.js","index.js","pages/PokemonPage/Style.module.css"],"names":["module","exports","AuthorizationVerification","navigate","useNavigate","location","useLocation","pathname","login","useStoreState","state","userData","data","password","accessPasswordOTP","loginVerifAndPasswordVerif","toLowerCase","useEffect","AuthPage","useState","loginInput","setLoginInput","passwordInput","setPasswordInput","setLogin","useStoreActions","actions","setPassword","motion","div","exit","opacity","animate","initial","style","area","container","Input","icon","size","iconPosition","placeholder","value","onChange","e","currentTarget","type","Button","circular","onClick","loginIsCorrect","passwordIsCorrect","alert","display","height","flexDirection","flexWrap","justifyContent","flexFlow","alignItems","AccessPasswordOTPPage","locationKeyThis","code","setCode","generateCode","setGenerateCode","setAccessPasswordOTP","codeOTP","i","num","Math","random","toString","setTimeout","generateOTP","MySelect","dataList","setPokemonSelectType","setPokemonSelectSubtype","typeSelect","pokemonSelect","subtypeSelect","subtype","className","select","map","name","selected","LeftMenu","types","setTypes","subtypes","setSubtypes","pokemon","all","then","result","leftMenu","Pagination","params","useParams","activeBtn","setActiveBtn","arrPages","setArrPages","countPaginations","currentPage","page","arrPagesT","sort","a","b","filter","Set","Group","buttonGroup","goPage","color","NothingWasFound","background","width","backgroundSize","backgroundRepeatY","CardPokemon","dataPokemon","openModal","Card","card","Image","src","images","small","wrapped","ui","Content","Header","Description","artist","extra","paddingTop","textAlign","link","id","ModalPokemon","open","setOpen","Modal","onClose","onOpen","trigger","image","Table","basic","Row","HeaderCell","Body","Cell","level","rarity","attacks","text","damage","hp","Actions","PokemonCardList","arrData","setArrData","setCountPaginations","setCurrentPage","thisPage","sortTypeSelect","sortSubtypeSelect","where","q","pageSize","ceil","totalCount","cardList","Loader","active","inverted","length","index","header","match","localStorage","clear","PokemonListPage","PokemonPage","setData","pokemonFind","find","leftBlock","large","alt","description","flavorText","rightBlock","supertype","Divider","cost","weaknesses","store","createStore","getItem","action","payload","setItem","App","configure","apiKey","AnimatePresence","exitBeforeEnter","path","element","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ecc99fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Style_container__1uRo2\",\"cardList\":\"Style_cardList__leKOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Style_card__1X98_\",\"link\":\"Style_link__2mOca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Style_select__106AN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftMenu\":\"Style_leftMenu__2Sdcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"Style_buttonGroup__36k38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Style_header__1_aF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Style_container__2QXpB\"};","import { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useStoreState } from 'easy-peasy';\r\n\r\n\r\n\r\nexport const AuthorizationVerification = () => {\r\n\r\n  let navigate = useNavigate();\r\n  let location = useLocation().pathname;\r\n  const login = useStoreState((state) => state.userData.data.login);\r\n  const password = useStoreState((state) => state.userData.data.password);\r\n  const accessPasswordOTP = useStoreState((state) => state.userData.data.accessPasswordOTP);\r\n  const loginVerifAndPasswordVerif = (typeof login === 'string' && typeof password === 'string') ? login.toLowerCase() === 'kode@kode.ru' && password.toLowerCase() === 'enk0deng' : false;\r\n\r\n  useEffect(() => {\r\n    if (login && password) {\r\n      if (loginVerifAndPasswordVerif && !accessPasswordOTP && location !== '/access-password') {\r\n        navigate('/access-password');\r\n      } else if (loginVerifAndPasswordVerif && accessPasswordOTP && (location === '/' || location === '/auth' || location === '/access-password')) {\r\n        navigate('/pokemon-list');\r\n      }\r\n    } else if (location !== '/' && location !== '/auth') {\r\n      navigate('/auth');\r\n    }\r\n  }, []);\r\n  return null;\r\n}","import React, { useState } from 'react';\r\nimport { Button, Input } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthorizationVerification } from '../components/AuthorizationVerification';\r\nimport { useStoreActions } from 'easy-peasy';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const AuthPage = () => {\r\n\r\n  let navigate = useNavigate();\r\n  const [loginInput, setLoginInput] = useState('kode@kode.ru');\r\n  const [passwordInput, setPasswordInput] = useState('Enk0deng');\r\n\r\n  const setLogin = useStoreActions((actions) => actions.userData.setLogin);\r\n  const setPassword = useStoreActions((actions) => actions.userData.setPassword);\r\n\r\n  const auth = () => {\r\n    const loginIsCorrect = loginInput.toLowerCase() === 'kode@kode.ru';\r\n    const passwordIsCorrect = passwordInput.toLowerCase() === 'enk0deng';\r\n    if (loginIsCorrect && passwordIsCorrect) {\r\n      setLogin(loginInput);\r\n      setPassword(passwordInput);\r\n      navigate('/access-password');\r\n    } else {\r\n      alert('Логин или пароль неверны')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div exit={{opacity:0}} animate={{opacity: 1}} initial={{opacity: 0}} >\r\n      <AuthorizationVerification />\r\n      <div style={style.area}>\r\n        <div style={style.container}>\r\n          <Input icon='user' size='big' iconPosition='left' placeholder='Login' value={loginInput} onChange={e => setLoginInput(e.currentTarget.value)} />\r\n          <Input icon='lock' size='big' iconPosition='left' type='password' placeholder='Password' value={passwordInput} onChange={e => setPasswordInput(e.currentTarget.value)} />\r\n          <Button circular size='massive' icon='arrow right' onClick={auth} />\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nconst style = {\r\n  area: {\r\n    display: 'flex',\r\n    height: '100vh',\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n  },\r\n  container: {\r\n    height: '40%',\r\n    display: 'flex',\r\n    flexFlow: 'column wrap',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center'\r\n  }\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Button, Input } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthorizationVerification } from '../components/AuthorizationVerification';\r\nimport { useStoreState, useStoreActions } from 'easy-peasy';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const AccessPasswordOTPPage = ({ locationKeyThis }) => {\r\n\r\n  let navigate = useNavigate();\r\n  const [code, setCode] = useState('');\r\n  const [generateCode, setGenerateCode] = useState('');\r\n\r\n  const setAccessPasswordOTP = useStoreActions((actions) => actions.userData.setAccessPasswordOTP);\r\n  const login = useStoreState((state) => state.userData.data.login);\r\n  const password = useStoreState((state) => state.userData.data.password);\r\n\r\n  const generateOTP = () => {\r\n    let codeOTP = '';\r\n    for (let i = 0; i < 4; i++) {\r\n      let num = ~~(Math.random() * 10);\r\n      codeOTP += num.toString();\r\n    }\r\n    setGenerateCode(codeOTP);\r\n    setTimeout(() => {\r\n      alert(codeOTP);\r\n    }, 1000);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (login && password && locationKeyThis !== 'default') {\r\n      generateOTP();\r\n    }\r\n  }, [])\r\n\r\n  const auth = () => {\r\n    if (code === generateCode) {\r\n      setAccessPasswordOTP(true);\r\n      navigate('/pokemon-list');\r\n    } else {\r\n      alert('Код неверный');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div exit={{ opacity: 0 }} animate={{ opacity: 1 }} initial={{ opacity: 0 }} >\r\n      <AuthorizationVerification />\r\n      <div style={style.area} >\r\n        <div style={style.container}>\r\n          <Input icon='mail' size='big' iconPosition='left' placeholder='Code from SMS' value={code} onChange={e => setCode(e.currentTarget.value)} />\r\n          <Button circular size='massive' icon='arrow right' onClick={auth} />\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  area: {\r\n    display: 'flex',\r\n    height: '100vh',\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n  },\r\n  container: {\r\n    height: '40%',\r\n    display: 'flex',\r\n    flexFlow: 'column wrap',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center'\r\n  }\r\n}","import style from './Style.module.css';\r\nimport { useStoreState, useStoreActions } from 'easy-peasy';\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\nexport const MySelect = ({ dataList, type }) => {\r\n\r\n    const navigate = useNavigate();\r\n    const setPokemonSelectType = useStoreActions((actions) => actions.userData.setPokemonSelectType);\r\n    const setPokemonSelectSubtype = useStoreActions((actions) => actions.userData.setPokemonSelectSubtype);\r\n    const typeSelect = useStoreState((state) => state.userData.pokemonSelect.type);\r\n    const subtypeSelect = useStoreState((state) => state.userData.pokemonSelect.subtype);\r\n\r\n\r\n    return (\r\n        <div className={style.select}>\r\n            {\r\n                type === 'type' ?\r\n                    <select onChange={e => { setPokemonSelectType(e.currentTarget.value); navigate(`/pokemon-list/1`); }} >\r\n                        <option>Выбрать тип</option>\r\n                        {\r\n                            dataList.map((name, i) => <option selected={typeSelect === name} key={i} value={name}>{name}</option>)\r\n                        }\r\n                    </select>\r\n                    :\r\n                    <select onChange={e => { setPokemonSelectSubtype(e.currentTarget.value); navigate(`/pokemon-list/1`); }} >\r\n                        <option>Выбрать подтип</option>\r\n                        {\r\n                            dataList.map((name, i) => <option selected={subtypeSelect === name} key={i} value={name}>{name}</option>)\r\n                        }\r\n                    </select>\r\n            }\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { MySelect } from '../MySelect/MySelect';\r\nimport style from './Style.module.css';\r\nimport pokemon from 'pokemontcgsdk';\r\n\r\n\r\nexport const LeftMenu = () => {\r\n\r\n    const [types, setTypes] = useState([]);\r\n    const [subtypes, setSubtypes] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        pokemon.type.all().then(result => { setTypes(result?.[0] ? result : []); });\r\n        pokemon.subtype.all().then(result => { setSubtypes(result?.[0] ? result : []); });\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.leftMenu}>\r\n            <MySelect dataList={types} type='type' />\r\n            <MySelect dataList={subtypes} type='subtype' />\r\n        </div>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport style from './Style.module.css';\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\n\r\n\r\nexport const Pagination = () => {\r\n\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n    const [activeBtn, setActiveBtn] = useState(1);\r\n    const [arrPages, setArrPages] = useState([]);\r\n    const countPaginations = useStoreState((state) => state.userData.data.countPaginations);\r\n    const currentPage = +useStoreState((state) => state.userData.data.currentPage);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let page = +params.page || 1;\r\n        // console.log(countPaginations);\r\n        // console.log(currentPage);\r\n        const FirtLeft = currentPage - 1 >= 1 ? currentPage - 1 : currentPage;\r\n        const SecondLeft = currentPage - 2 >= 2 ? currentPage - 2 : currentPage;\r\n        const ThridLeft = currentPage - 3 >= 3 ? currentPage - 3 : currentPage;\r\n        const FirtRight = currentPage + 1 <= countPaginations ? currentPage + 1 : countPaginations;\r\n        const SecondRight = currentPage + 2 <= countPaginations ? currentPage + 2 : countPaginations;\r\n        const ThridRight = currentPage + 3 <= countPaginations ? currentPage + 3 : countPaginations;\r\n\r\n        let arrPagesT = [1, ThridLeft, SecondLeft, FirtLeft, currentPage, FirtRight, SecondRight, ThridRight, countPaginations];\r\n        arrPagesT = arrPagesT.sort((a, b) => a - b).filter(e => e > 0);\r\n        arrPagesT = [...new Set([...arrPagesT])];\r\n        setArrPages(arrPagesT)\r\n        // console.log(arrPagesT);\r\n        setActiveBtn(page);\r\n    }, [countPaginations])\r\n\r\n\r\n    const goPage = (page) => {\r\n        setActiveBtn(page);\r\n        navigate(`/pokemon-list/${page}`);\r\n    }\r\n\r\n    return (\r\n        <Button.Group size='small' className={style.buttonGroup}>\r\n            {\r\n                arrPages.map((page) => <Button onClick={() => goPage(page)} key={page} color={page === activeBtn ? 'grey' : null}>{page}</Button>)\r\n            }\r\n        </Button.Group>\r\n    );\r\n}","export const NothingWasFound = () => {\r\n\r\n  return (\r\n    <div style={style.container}>\r\n    </div>\r\n  );\r\n}\r\n//https://fosstodon.b-cdn.net/media_attachments/files/005/303/500/original/d3550f2d87ee7a1d.png\r\nconst style = {\r\n  container: {\r\n    background: 'url(./assets/surprised-pikachu.png)',\r\n    //background: 'url(https://fosstodon.b-cdn.net/media_attachments/files/005/303/500/original/d3550f2d87ee7a1d.png)',\r\n    height: '500px',\r\n    width: '500px',\r\n    backgroundSize: 'contain',\r\n    backgroundRepeatY: 'no-repeat',\r\n  }\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport { Card, Image } from 'semantic-ui-react';\r\nimport style from './Style.module.css';\r\n\r\n\r\nexport const CardPokemon = ({ dataPokemon, openModal }) => {\r\n    let navigate = useNavigate();\r\n    return (\r\n        <Card onClick={() => openModal(true)} className={style.card}>\r\n            <Image src={dataPokemon.images.small} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Header>{dataPokemon.name}</Card.Header>\r\n                <Card.Description>\r\n                    {dataPokemon.artist}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra style={{ paddingTop: 0, textAlign: 'end' }}>\r\n                <span className={style.link} onClick={() => navigate(`/pokemon/${dataPokemon.id}`)} >Подробнее</span>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n}","import { useState } from 'react'\r\nimport { Button, Image, Table, Modal } from 'semantic-ui-react'\r\nimport { CardPokemon } from '../CardPokemon/CardPokemon';\r\n\r\n\r\nexport const ModalPokemon = ({ dataPokemon }) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<CardPokemon openModal={setOpen} dataPokemon={dataPokemon} />}\r\n        >\r\n            <Modal.Header>{dataPokemon.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={dataPokemon.images.small} wrapped />\r\n                <Modal.Description>\r\n                    <Table basic='very'>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell></Table.HeaderCell>\r\n                                <Table.HeaderCell>Характеристика</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell>Уникальный ID</Table.Cell>\r\n                                <Table.Cell>{dataPokemon?.id || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Уровень</Table.Cell>\r\n                                <Table.Cell>{dataPokemon.level || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Редкость</Table.Cell>\r\n                                <Table.Cell>{dataPokemon.rarity || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Слабость</Table.Cell>\r\n                                <Table.Cell>{dataPokemon.name || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Атака</Table.Cell>\r\n                                <Table.Cell>{dataPokemon?.attacks?.[0].name || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Описание атаки</Table.Cell>\r\n                                <Table.Cell>{dataPokemon?.attacks?.[0].text || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Урон</Table.Cell>\r\n                                <Table.Cell>{dataPokemon?.attacks?.[0].damage || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Здоровье</Table.Cell>\r\n                                <Table.Cell>{dataPokemon.hp || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Тип</Table.Cell>\r\n                                <Table.Cell>{dataPokemon?.types?.[0] || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell>Подтип</Table.Cell>\r\n                                <Table.Cell>{dataPokemon?.subtypes?.[0] || 'Неопределено'}</Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => setOpen(false)}>Закрыть</Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport style from './Style.module.css';\r\nimport pokemon from 'pokemontcgsdk';\r\nimport { Pagination } from './../../components/Pagination/Pagination';\r\nimport { NothingWasFound } from './../../components/NothingWasFound/NothingWasFound';\r\nimport { Loader } from 'semantic-ui-react';\r\nimport { ModalPokemon } from '../ModalPokemon/ModalPokemon';\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\n\r\nexport const PokemonCardList = () => {\r\n\r\n  const [arrData, setArrData] = useState(null);\r\n  const params = useParams();\r\n  const page = params.page || '1';\r\n\r\n  const typeSelect = useStoreState((state) => state.userData.pokemonSelect.type);\r\n  const subtypeSelect = useStoreState((state) => state.userData.pokemonSelect.subtype);\r\n\r\n  const setCountPaginations = useStoreActions((actions) => actions.userData.setCountPaginations);\r\n  const setCurrentPage = useStoreActions((actions) => actions.userData.setCurrentPage);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const thisPage = params.page || '1';\r\n    setCurrentPage(thisPage);\r\n    let sortTypeSelect = (typeSelect && typeSelect !== 'Выбрать тип') ? `types:${typeSelect}` : '';\r\n    let sortSubtypeSelect = (subtypeSelect && subtypeSelect !== 'Выбрать подтип') ? ` subtypes:${subtypeSelect}` : '';\r\n\r\n    pokemon.card.where({ q: sortTypeSelect + sortSubtypeSelect, pageSize: 50, page: thisPage })\r\n      .then(result => {\r\n        setCountPaginations(Math.ceil(result.totalCount / 50)); // Кол-во страниц по результату\r\n        setArrData(result.data);\r\n        // console.log(result);\r\n      })\r\n  }, [page, typeSelect, subtypeSelect]);\r\n\r\n  return (\r\n    <motion.div exit={{opacity:0}} animate={{opacity: 1}} initial={{opacity: 0}} >\r\n    <div className={style.container}>\r\n      <div className={style.cardList}>\r\n        {\r\n          arrData === null\r\n            ?\r\n            <Loader active inverted size='large'>Загрузка</Loader>\r\n            :\r\n            arrData.length > 0 ? arrData.map((data, index) => <ModalPokemon key={index} dataPokemon={data} />) : <NothingWasFound />\r\n        }\r\n      </div>\r\n      <Pagination />\r\n    </div>\r\n    </motion.div>\r\n  );\r\n}","import { useNavigate, useLocation } from 'react-router';\r\nimport { Button } from 'semantic-ui-react';\r\nimport style from './Style.module.css';\r\nimport { useStoreActions } from 'easy-peasy';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation().pathname;\r\n    const setLogin = useStoreActions((actions) => actions.userData.setLogin);\r\n    const setPassword = useStoreActions((actions) => actions.userData.setPassword);\r\n    const setAccessPasswordOTP = useStoreActions((actions) => actions.userData.setAccessPasswordOTP);\r\n\r\n    const logout = () => {\r\n        setLogin(null);\r\n        setPassword(null);\r\n        setAccessPasswordOTP(null);\r\n        localStorage.clear();\r\n        navigate('/auth');\r\n    }\r\n    const back = () => {\r\n        navigate(-1);\r\n    }\r\n    \r\n    return (\r\n        <div className={style.header}>\r\n            {\r\n                location.match(/pokemon(?!-)/) ? <Button onClick={back}>Назад</Button> : <span></span>\r\n            }\r\n            <Button onClick={logout}>Выход</Button>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { LeftMenu } from '../../components/LeftMenu/LeftMenu';\r\nimport { PokemonCardList } from '../../components/PokemonCardList/PokemonCardList';\r\nimport { AuthorizationVerification } from './../../components/AuthorizationVerification';\r\nimport { Header } from './../../components/Header/Header';\r\nimport style from './Style.module.css';\r\n\r\n\r\nexport const PokemonListPage = () => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <AuthorizationVerification />\r\n      <Header />\r\n      <div className={style.container}>\r\n        <LeftMenu />\r\n        <PokemonCardList />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { AuthorizationVerification } from './../../components/AuthorizationVerification';\r\nimport { Header } from './../../components/Header/Header';\r\nimport style from './Style.module.css';\r\nimport { Divider } from 'semantic-ui-react';\r\nimport pokemon from 'pokemontcgsdk';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const PokemonPage = () => {\r\n\r\n  const [data, setData] = useState(null);\r\n  const params = useParams();\r\n  const page = params.page || 'base1-4';\r\n\r\n  useEffect(() => {\r\n    let pokemonFind = page;\r\n    pokemon.card.find(pokemonFind)\r\n      .then(result => {\r\n        setData(result);\r\n      })\r\n  }, [page]);\r\n\r\n  return (\r\n    <motion.div exit={{opacity:0}} animate={{opacity: 1}} initial={{opacity: 0}} >\r\n      <AuthorizationVerification />\r\n      <Header />\r\n      {\r\n        data !== null ?\r\n          <div className={style.container}>\r\n            <div className={style.leftBlock}>\r\n              <img src={data.images.large} alt='...' />\r\n              <div className={style.description}>{data.flavorText}</div>\r\n            </div>\r\n            <div className={style.rightBlock}>\r\n              <p>Name - {data.name}</p>\r\n              <p>Supertype - {data.supertype}</p>\r\n              <p>Types - {data.types.map(e => e + ' ')}</p>\r\n              <p>SubTypes - {data.subtypes.map(e => e + ' ')}</p>\r\n              <Divider />\r\n              <p>Damage - {data?.attacks?.[0].damage || 'Неопределено'}</p>\r\n              <p>{data?.attacks?.[0].cost?.[0] || 'Неопределено'}</p>\r\n              <p>{data?.weaknesses?.[0].type || 'Неопределено'}</p>\r\n              <p>{data.hp}</p>\r\n            </div>\r\n          </div>\r\n          : null\r\n      }\r\n\r\n</motion.div>\r\n  );\r\n\r\n}\r\n\r\n","import { action, createStore } from \"easy-peasy\";\r\n\r\nconst store = createStore({\r\n\r\n    userData: {\r\n        data: {\r\n            login: localStorage.getItem('login'),\r\n            password: localStorage.getItem('password'),\r\n            accessPasswordOTP: localStorage.getItem('accessPasswordOTP'),\r\n            currentPage: 1,\r\n            countPaginations: 10,\r\n        },\r\n        pokemonSelect: {\r\n            type: '',\r\n            subtype: ''\r\n        },\r\n        setLogin: action((state, payload) => {\r\n            state.data.login = payload;\r\n            localStorage.setItem('login', payload);\r\n        }),\r\n        setPassword: action((state, payload) => {\r\n            state.data.password = payload;\r\n            localStorage.setItem('password', payload);\r\n        }),\r\n        setAccessPasswordOTP: action((state, payload) => {\r\n            state.data.accessPasswordOTP = payload;\r\n            localStorage.setItem('accessPasswordOTP', payload);\r\n        }),\r\n        setCurrentPage: action((state, payload) => {\r\n            state.data.currentPage = payload;\r\n        }),\r\n        setCountPaginations: action((state, payload) => {\r\n            state.data.countPaginations = payload;\r\n        }),\r\n        setPokemonSelectType: action((state, payload) => {\r\n            state.pokemonSelect.type = payload;\r\n        }),\r\n        setPokemonSelectSubtype: action((state, payload) => {\r\n            state.pokemonSelect.subtype = payload;\r\n        })\r\n    }\r\n});\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { AuthPage } from './pages/AuthPage';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { AccessPasswordOTPPage } from './pages/AccessPasswordOTPPage';\r\nimport { PokemonListPage } from './pages/PokemonListPage/PokemonListPage';\r\nimport { PokemonPage } from './pages/PokemonPage/PokemonPage';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { useLocation } from 'react-router';\r\nimport \"./styles.css\";\r\nimport pokemon from 'pokemontcgsdk';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport store from './store/store';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\n\r\nfunction App() {\r\n\r\n  const location = useLocation();\r\n  pokemon.configure({ apiKey: 'ddd31964-6b73-4f6d-8fc4-0ac4b283516b' });\r\n\r\n\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <AnimatePresence exitBeforeEnter initial={false}>\r\n        <Routes>\r\n          <Route path=\"auth\" element={<AuthPage />} />\r\n          <Route path=\"access-password\" element={<AccessPasswordOTPPage locationKeyThis={location.key} />} />\r\n          <Route path=\"pokemon-list\" element={<PokemonListPage />} >\r\n            <Route path=\":page\" />\r\n          </Route>\r\n          <Route path=\"pokemon\" element={<PokemonPage />} >\r\n            <Route path=\":page\" />\r\n          </Route>\r\n          <Route path=\"*\" element={<AuthPage />} />\r\n        </Routes>\r\n      </AnimatePresence>\r\n    </StoreProvider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Style_container__3HjBT\",\"leftBlock\":\"Style_leftBlock__1EIfq\",\"description\":\"Style_description__24Mde\",\"rightBlock\":\"Style_rightBlock__28qeO\"};"],"sourceRoot":""}